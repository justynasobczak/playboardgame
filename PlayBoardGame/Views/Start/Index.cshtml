@model StartViewModels
@{
    ViewBag.Title = "Let's play board games";
}
<div class="plainText standardLink">
    <a asp-controller="Shelf" asp-action="List">Organize your shelf</a>, put your games on your virtual shelf, it will be
    easier to select the games for the meeting.
</div >
<div class="plainText standardLink">
    <a asp-controller="User" asp-action="UserProfileAsync">Fill in your data</a>, it's easier to invite you for the meeting
    when you can be found in the application.
</div>
<div class="plainText standardLink">
    <a asp-controller="Meeting" asp-action="Create">Add a meeting</a>, provide the dates, invite the people,
    they will be informed about your invitation by email.
</div>
<div class="plainText standardLink">Check your meetings in the <a asp-controller="Meeting" asp-action="List">calendar</a>.</div>
<div class="plainText standardLink">Do you know <a asp-controller="HangingTree" asp-action="HangingTree">hanged man</a> game?</div>
<div class="mt-5 mb-3">
    <h4>Upcoming meetings (next 7 days)</h4>
</div>
<table class="table table-hover">

    @if (!Model.UpcomingMeetings.Any())
    {
        <tr>
            <td colspan="3" class="text-center">No upcoming meetings</td>
        </tr>
    }
    else
    {
        <tr>
            <th class="text-left">Date</th>
            <th class="text-left">Games</th>
            <th class="text-left">People</th>
        </tr>
        foreach (var item in Model.UpcomingMeetings)
        {
            <tr>
                <td>@item.StartDate</td>
                <td>@item.Games</td>
                <td>@item.People</td>
            </tr>
        }
    }
</table>