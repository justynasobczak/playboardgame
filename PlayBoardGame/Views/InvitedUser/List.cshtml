@model InvitedUserViewModel.InvitedUserListViewModel
@{
    ViewBag.Title = "Meeting";
}
@await Component.InvokeAsync("MeetingTabs", new
{
    meetingId = Model.MeetingId, tabName = MeetingTabName.People,
    isCreateMode = false
})

<form class="form-inline" asp-action="Add" method="post">

    @if (Model.IsEditable && Model.AvailableUsers.Any())
    {
        <label class="mr-sm-2 mb-0">Friends:</label>
        <select class="form-control mr-sm-2 mb-2 mb-sm-0 custom-select" asp-for="SelectedToInviteUserId"
                asp-items="@(new SelectList(Model.AvailableUsers, "Id", "FullName"))">
        </select>
        <input type="hidden" name="meetingId" value="@Model.MeetingId.ToString()"/>
        <button type="submit" class="btn btn-info mt-2 mt-sm-0">Invite for meeting</button>
        <div class="plainText standardLink">
            Do you want to invite more people but they are not on the list of friends?
            <a asp-controller="SentInvitation" asp-action="List">Send friend request.</a>
        </div>
    }

</form>


<table class="table table-hover mt-3">

    @if (!Model.InvitedUsersList.Any())
    {
        <tr>
            <td colspan="3" class="text-center">No invited users</td>
        </tr>
    }
    else
    {
        foreach (var item in Model.InvitedUsersList)
        {
            <tr>
                <td class="tdAvatar">
                    <div>
                        <img gravatar-email="@item.UserEmail" alt="Avatar"/>
                    </div>
                </td>
                <td>@item.DisplayedUserName</td>
                @switch (item.Status)
                {
                    case InvitationStatus.Accepted:
                        <td class="acceptedStatus">@item.Status.ToString()</td>
                        break;
                    case InvitationStatus.Cancelled:
                        <td class="notAcceptedStatus">@item.Status.ToString()</td>
                        break;
                    case InvitationStatus.Pending:
                        <td class="pendingStatus">@item.Status.ToString()</td>
                        break;
                    case InvitationStatus.Rejected:
                        <td class="notAcceptedStatus">@item.Status.ToString()</td>
                        break;
                    default:
                        <td class="text-primary">@item.Status.ToString()</td>
                        break;
                }
                <td>
                    <form method="post">
                        <input type="hidden" name="userId" value="@item.Id"/>
                        <input type="hidden" name="meetingId" value="@Model.MeetingId.ToString()"/>
                        @if (Model.IsEditable)
                        {
                            <button asp-action="Delete" type="submit" class="buttonForIcons">
                                <i class="far fa-trash-alt icons" data-toggle="tooltip" title="@Constants.DeleteInvitationTooltip"></i>
                            </button>
                        }
                        @if (item.UserName == User.Identity.Name)
                        {
                            if (item.Status == InvitationStatus.Pending || item.Status == InvitationStatus.Rejected
                                || item.Status == InvitationStatus.Cancelled)
                            {
                                <button asp-action="ChangeStatus" type="submit" class="buttonForIcons" asp-route-status="Accepted">
                                    <i class="fas fa-user-check icons" data-toggle="tooltip" title="@Constants.AcceptInvitationTooltip"></i>
                                </button>
                            }
                            if (item.Status == InvitationStatus.Pending)
                            {
                                <button asp-action="ChangeStatus" type="submit" class="buttonForIcons" asp-route-status="Rejected">
                                    <i class="fas fa-window-close icons" data-toggle="tooltip" title="@Constants.RejectInvitationTooltip"></i>
                                </button>
                            }
                            if (item.Status == InvitationStatus.Accepted)
                            {
                                <button asp-action="ChangeStatus" type="submit" class="buttonForIcons" asp-route-status="Cancelled">
                                    <i class="fas fa-ban icons" data-toggle="tooltip" title="@Constants.CancelInvitationTooltip"></i>
                                </button>
                            }
                        }
                    </form>
                </td>
            </tr>
        }
    }
</table>

<script>
$(document).ready(function(){
  $('[data-toggle="tooltip"]').tooltip();
});
</script>