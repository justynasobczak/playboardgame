@model ShelfEditViewModel
@{
    ViewBag.Title = "Add game";
}
<form asp-action="Edit" class="form-inline mb-4" method="get">
    @await Component.InvokeAsync("SearchFields", new {ActionMethod = nameof(ShelfController.Edit)})
    <a asp-action="List" class="btn btn-secondary text-right ml-auto btn-sm">Back to shelf</a>
</form>

<div class="row">
    @foreach (var game in Model.AvailableGames)
    {
        <div class="col-md-3 col-sm-4">
            <div class="thumbnail">
                @if (game.PhotoPath != null)
                {
                    var photoPath = $"~/gamephotos/{game.PhotoPath}";
                    <img src="@photoPath" alt="no image" asp-append-version="true" class="imageGame"/>
                    <div class="caption">
                        <form asp-action="Edit" method="post">
                            <p>
                                @game.Title
                                <input type="hidden" name="id" value="@game.GameId.ToString()"/>
                                <button type="submit" class="buttonForIcons">
                                    <i class="fas fa-plus icons" data-toggle="tooltip" title="@Constants.AddGameToShelfTooltip"></i>
                                </button>
                            </p>
                        </form>
                    </div>
                }
                else
                {
                    <img src="/lib/custom/img/noImageAlien.jpg" alt="no image" asp-append-version="true" class="imageGame"/>
                    <div class="caption">
                        <form asp-action="Edit" method="post">
                            <p>
                                @game.Title
                                <input type="hidden" name="id" value="@game.GameId.ToString()"/>
                                <button type="submit" class="buttonForIcons">
                                    <i class="fas fa-plus icons" data-toggle="tooltip" title="@Constants.AddGameToShelfTooltip"></i>
                                </button>
                            </p>
                        </form>
                    </div>
                }
            </div>
        </div>
    }
</div>
@await Component.InvokeAsync("PaginationTabs", new
{
    HasPreviousPage = Model.AvailableGames.HasPreviousPage,
    HasNextPage = Model.AvailableGames.HasNextPage,
    PageIndex = Model.AvailableGames.PageIndex,
    ActionMethod = nameof(ShelfController.Edit)
})

<script>
$(document).ready(function(){
  $('[data-toggle="tooltip"]').tooltip();
});
</script>