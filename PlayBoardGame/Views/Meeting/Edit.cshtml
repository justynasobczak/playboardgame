@model MeetingViewModels.CreateEditMeetingViewModel

@{
    ViewBag.Title = "Meeting";
}

@await Component.InvokeAsync("MeetingTabs", new
{
    meetingId = Model.MeetingId, tabName = MeetingTabName.Details,
    isCreateMode = ViewContext.RouteData.Values["action"] as string == nameof(MeetingController.Create)
})

<div>
    <form asp-action="Edit" method="post">
        <input type="hidden" asp-for="MeetingId"/>
        <input type="hidden" asp-for="IsEditable"/>

        <fieldset
            @{
                if (!Model.IsEditable)
                {
                    <text>disabled="disabled"</text>
                }
            }
        >
            <div class="form-row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label asp-for="Title">Title</label>
                        <span asp-validation-for="Title" class="text-danger"></span>
                        <input asp-for="Title" class="form-control"/>
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="StartDateTime">Start date and time</label><i class="far fa-envelope icons ml-1"></i>
                        <span asp-validation-for="StartDateTime" class="text-danger"></span>
                        <input id="startDatetimepicker" type="text" asp-for="StartDateTime" class="form-control"/>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="EndDateTime">End date and time</label>
                        <span asp-validation-for="EndDateTime" class="text-danger"></span>
                        <input id="endDatetimepicker" type="text" asp-for="EndDateTime" class="form-control"/>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="Organizer">Organizer</label>
                        <span asp-validation-for="Organizer" class="text-danger"></span>
                        <input asp-for="Organizer" readonly="readonly" class="form-control"/>
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="col">
                    <div class="form-group">
                        <label asp-for="SelectedGames">Games</label>
                        <span asp-validation-for="SelectedGames" class="text-danger"></span>
                        <select multiple="multiple" asp-for="SelectedGames" asp-items="@(new SelectList(Model.Games, "GameId", "Title"))"
                                class="form-control">
                        </select>
                    </div>
                </div>
            </div>


            <div class="form-row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Address.Street">Street</label>
                        <button type="button" onclick="CopyAddress()" class="buttonForIcons"
                                data-toggle="copyAddressTooltip" title="@Constants.CopyAddressTooltip">
                            <i class="far fa-copy icons"></i>
                        </button>
                        <span asp-validation-for="Address.Street" class="text-danger"></span>
                        <input asp-for="Address.Street" class="form-control" id="Street"/>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Address.City">City</label>
                        <span asp-validation-for="Address.City" class="text-danger"></span>
                        <input asp-for="Address.City" class="form-control" id="City"/>
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Address.PostalCode">Postal code</label>
                        <span asp-validation-for="Address.PostalCode" class="text-danger"></span>
                        <input asp-for="Address.PostalCode" class="form-control" id="Code"/>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Address.Country">Country</label>
                        <span asp-validation-for="Address.Country" class="text-danger"></span>
                        <select asp-for="Address.Country" asp-items="@(new SelectList(Model.Address.Countries.OrderBy(v => v.Value), "Key", "Value"))"
                                class="form-control custom-select" id="Country">
                            <option disabled selected>--- SELECT ---</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="col">
                    <div class="form-group">
                        <label asp-for="Notes">Notes</label>
                        <span asp-validation-for="Notes" class="text-danger"></span>
                        <textarea asp-for="Notes" class="form-control" placeholder="Small green house on the left side..."></textarea>
                    </div>
                </div>
            </div>
        </fieldset>

        <div class="text-left">
            <button
                @{
                    if (!Model.IsEditable)
                    {
                        <text>disabled="disabled"</text>
                    }
                }
                class="btn btn-info" type="submit">
                Save
            </button>
            <a asp-action="List" class="btn btn-secondary">Cancel</a>
        </div>

    </form>
</div>

<script>
    $(document).ready(function() {
        $('[data-toggle="copyAddressTooltip"]').tooltip();
        $('#startDatetimepicker').datetimepicker();
        $('#endDatetimepicker').datetimepicker();
    });
    let CopyAddress = function() {
        $.ajax({
            url: "/api/HomeAddress",
            contentType: "application/json",
            method: "GET",
            dataType: "json",
            success: function(data) {
                $.each(data,
                    function(index, element) {
                        switch (index) {
                        case "Street":
                            document.getElementById("Street").value = element;
                            break;
                        case "City":
                            document.getElementById("City").value = element;
                            break;
                        case "PostalCode":
                            document.getElementById("Code").value = element;
                            break;
                        case "Country":
                            document.getElementById("Country").value = element;
                            break;
                        }
                    });
            }
        });
    };
</script>